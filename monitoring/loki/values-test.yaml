# 최종 values.yaml for Minikube with MinIO

# 마이크로서비스 모드로 배포
# deploymentMode를 명시하지 않으면 기본적으로 이 모드로 동작합니다.
grafana:
  enabled: false

distributor:
  replicas: 1
  resources:
    requests:
      cpu: 50m
      memory: 128Mi
    limits:
      cpu: 100m
      memory: 256Mi

ingester:
  replicas: 1
  resources:
    requests:
      cpu: 100m
      memory: 256Mi
    limits:
      cpu: 500m
      memory: 512Mi
  chunk_idle_period: 30m
  chunk_target_size: 1MB
  max_chunk_age: 30m

querier:
  replicas: 1
  resources:
    requests:
      cpu: 50m
      memory: 128Mi
    limits:
      cpu: 100m
      memory: 256Mi

compactor:
  enabled: false

loki:
  limits_config:
    allow_structured_metadata: true
    retention_period: 7d
    ingestion_rate_mb: 5
    ingestion_burst_size_mb: 10
    max_entries_limit_per_query: 5000
    max_cache_freshness_per_query: 10m
    max_query_length: 168h
    max_query_parallelism: 16
    max_streams_per_user: 1000
    max_line_size: 128KB
    reject_old_samples: true
    reject_old_samples_max_age: 24h

  storage:
    type: 's3'
    s3:
      # MinIO의 클러스터 내부 주소. http://<서비스이름>.<네임스페이스>.svc.cluster.local:9000
      endpoint: "http://minio.minio.svc.cluster.local:9000"
      # insecure: true는 http 엔드포인트 사용 시 필요합니다.
      insecure: true
      # accessKeyId와 secretAccessKey는 MinIO 설치 시 설정한 값입니다.
      accessKeyId: "minioadmin"
      secretAccessKey: "minioadmin123"
      # s3ForcePathStyle: true는 MinIO와 같은 S3 호환 스토리지에 필수적인 설정입니다.
      s3ForcePathStyle: true
      # bucketNames는 Loki가 자동으로 생성하므로 명시하지 않아도 됩니다.

  serviceAccount:
    create: true
    annotations: {} # 비워둡니다.

serviceMonitor:
  enabled: true
  interval: 30s