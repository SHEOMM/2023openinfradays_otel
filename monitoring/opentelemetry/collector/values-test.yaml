mode: deployment

replicas: 1

autoscaling:
  enabled: false

serviceMonitor:
  enabled: true

resources:
  requests:
    cpu: 100m
    memory: 128Mi
  limits:
    cpu: 200m
    memory: 256Mi

config:
  receivers:
    otlp:
      protocols:
        grpc:
          endpoint: "0.0.0.0:4317"
        http:
          endpoint: "0.0.0.0:4318"

  processors:
    memory_limiter:
      check_interval: 1s
      limit_percentage: 80
      spike_limit_percentage: 25
    batch:
      send_batch_size: 2048
      timeout: 10s
      send_batch_max_size: 4096
    k8sattributes:
      auth_type: "serviceAccount"
      passthrough: true
      extract:
        metadata:
          - k8s.pod.name
          - k8s.namespace.name
          - k8s.container.name
          - k8s.deployment.name
    spanmetrics:
      metrics_exporter: prometheus
      latency_histogram_buckets: [0.5, 0.75, 1, 2.5, 5, 10]
      dimensions:
        - service.name
        - span.name
        - span.kind
        - status.code
        - k8s.namespace.name
        - k8s.deployment.name
    transform/logs:
      log_statements:
        - context: resource
          statements:
            - set(attributes["log_type"], "api") where body.logger_name == "GRYPHON_API_LOGGER"
            - set(attributes["log_type"], "business") where body.logger_name == "GRYPHON_LOGGER"
        - context: log
          statements:
            - set(body["message"], "Replaced by *** MASKED ***") where body["message"] matches "[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}"

  exporters:
    logging:
      loglevel: info
    prometheus:
      endpoint: "0.0.0.0:8888"
    loki:
      endpoint: "http://loki.monitoring.svc.cluster.local:3100/loki/api/v1/push"
      labels:
        resource:
          k8s.deployment.name: "app"
          log_type: "log_type"
    tempo:
      endpoint: "http://tempo-distributor.monitoring.svc.cluster.local:4318"
  # TODO: 안정화되면 logging exporter 제거
  service:
    pipelines:
      traces:
        receivers: [otlp]
        processors: [memory_limiter, k8sattributes, batch, spanmetrics]
        exporters: [tempo, logging]
      logs:
        receivers: [otlp]
        processors: [memory_limiter, k8sattributes, transform/logs, batch]
        exporters: [loki, logging]
      metrics:
        receivers: [spanmetrics]
        processors: [batch]
        exporters: [prometheus, logging]
