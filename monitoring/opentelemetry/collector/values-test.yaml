mode: deployment

replicaCount: 1

image:
  repository: otel/opentelemetry-collector-contrib

autoscaling:
  enabled: false

resources:
  requests:
    cpu: 100m
    memory: 128Mi
  limits:
    cpu: 200m
    memory: 256Mi

config:
  receivers:
    otlp:
      protocols:
        grpc:
          endpoint: "0.0.0.0:4317"
        http:
          endpoint: "0.0.0.0:4318"

  processors:
    memory_limiter:
      check_interval: 1s
      limit_percentage: 80
      spike_limit_percentage: 25
    batch:
      send_batch_size: 512
      timeout: 2s
      send_batch_max_size: 1024
    filter/health_checks:
      error_mode: ignore
      traces:
        span:
          - 'IsMatch(name, ".*/actuator/health.*")'
          - 'IsMatch(attributes["http.target"], ".*/actuator/health.*")'
          - 'IsMatch(attributes["http.url"], ".*/actuator/health.*")'
          - 'IsMatch(attributes["url.path"], ".*/actuator/health.*")'
          - 'IsMatch(attributes["http.route"], ".*/actuator/health.*")'
          - 'IsMatch(name, ".*/actuator/prometheus.*")'
          - 'IsMatch(name, ".*OperationHandler.handle.*")'
          - 'IsMatch(name, "INFO")'
          - 'IsMatch(name, "PING")'
          - 'IsMatch(name, "HELLO")'
          - 'IsMatch(name, "grpc.health.v1.Health/Check")'
          - 'IsMatch(attributes["http.method"], "OPTIONS")'
    k8sattributes:
      auth_type: "serviceAccount"
      passthrough: true
    resource:
      attributes:
        - key: deployment_name
          from_attribute: k8s.deployment.name
          action: upsert
        - key: service_name
          from_attribute: service.name
          action: upsert
          # 기존 k8s 속성들 모두 삭제
        - key: k8s.deployment.name
          action: delete
        - key: k8s.pod.name
          action: delete
        - key: k8s.namespace.name
          action: delete
        - key: k8s.container.name
          action: delete
        - key: k8s.replicaset.name
          action: delete
        - key: k8s.node.name
          action: delete
        - key: k8s.pod.ip
          action: delete
    metricstransform:
      # 프로메테우스 스킴에 맞춰서 메트릭 이름 변경
      transforms:
        - include: traces.spanmetrics.calls
          action: update
          new_name: traces_spanmetrics_calls_total
        - include: traces.spanmetrics.duration
          action: update
          new_name: traces_spanmetrics_latency
  connectors:
    spanmetrics:
      namespace: traces.spanmetrics
      histogram:
        explicit:
          buckets: [ 100ms, 250ms, 500ms, 1s, 5s, 10s ]
      aggregation_temporality: "AGGREGATION_TEMPORALITY_CUMULATIVE"
      dimensions:
        - name: k8s.deployment.name
      metrics_flush_interval: 15s
      exemplars:
        enabled: true
      events:
        enabled: true
        dimensions:
          - name: exception.type
      resource_metrics_key_attributes:
        - service.name

  exporters:
    # 문제가 있다면 해당 파이프라인에 exporter에 debug를 추가하고 디버깅할 수 있습니다
    debug:
      verbosity: detailed
    otlphttp:
      endpoint: "http://loki-gateway.monitoring.svc.cluster.local/otlp"
      tls:
        insecure: true
    otlp/tempo:
      endpoint: "http://tempo.monitoring.svc.cluster.local:4317"
      tls:
        insecure: true
    prometheusremotewrite:
      endpoint: "http://prometheus-server.monitoring.svc.cluster.local:80/api/v1/write"
  service:
    pipelines:
      traces:
        receivers: [otlp]
        processors: [memory_limiter, filter/health_checks, k8sattributes, batch]
        exporters: [otlp/tempo, spanmetrics]
      logs:
        receivers: [otlp]
        processors: [memory_limiter, k8sattributes, resource, batch]
        exporters: [otlphttp]
      metrics:
        receivers: [spanmetrics]
        processors: [metricstransform, batch]
        exporters: [prometheusremotewrite]
