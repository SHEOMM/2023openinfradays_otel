mode: deployment

replicaCount: 1

image:
  repository: otel/opentelemetry-collector-contrib

autoscaling:
  enabled: false

resources:
  requests:
    cpu: 100m
    memory: 128Mi
  limits:
    cpu: 200m
    memory: 256Mi

config:
  receivers:
    otlp:
      protocols:
        grpc:
          endpoint: "0.0.0.0:4317"
        http:
          endpoint: "0.0.0.0:4318"

  processors:
    memory_limiter:
      check_interval: 1s
      limit_percentage: 80
      spike_limit_percentage: 25
    batch:
      send_batch_size: 2048
      timeout: 10s
      send_batch_max_size: 4096
    k8sattributes:
      auth_type: "serviceAccount"
      passthrough: true
    resource:
      attributes:
        # 필수 속성들 유지
        - key: service.instance.id
          from_attribute: k8s.pod.name
          action: upsert
        - key: deployment.environment.name
          value: "production"  # 또는 적절한 환경 값
          action: upsert

        # 기존 설정 유지
        - key: deployment_name
          from_attribute: k8s.deployment.name
          action: upsert
        - key: service_name
          from_attribute: service.name
          action: upsert
  connectors:
    spanmetrics:
      namespace: traces.spanmetrics
      # histogram, dimensions 등이 여기에 위치해야 합니다.
      histogram:
        explicit:
          buckets: [ 0.5, 0.75, 1, 2.5, 5, 10 ]
      dimensions:
        - service.name  # service_name으로 조회하기 위해 필수
        - span.name     # "GET /test/hello" 같은 span 이름으로 조회하기 위해 필수
        - http.route    # HTTP 라우트 기준으로 조회하려면 추가
        - http.method   # HTTP 메서드 기준
        - status.code   # 성공/에러 여부를 구분하기 위해 필수 (OK, ERROR 등)
        - k8s.deployment.name # 쿠버네티스 배포 단위로 보기 위해 추가
      metrics_flush_interval: 15s
      exemplars:
        enabled: true

  exporters:
    debug:
      verbosity: detailed
    otlphttp:
      endpoint: "http://loki-gateway.monitoring.svc.cluster.local/otlp"
      tls:
        insecure: true
    otlp/tempo:
      endpoint: "http://tempo.monitoring.svc.cluster.local:4317"
      tls:
        insecure: true
    prometheusremotewrite:
      endpoint: "http://prometheus-server.monitoring.svc.cluster.local:80/api/v1/write"


  service:
    pipelines:
      traces:
        receivers: [otlp]
        processors: [memory_limiter, k8sattributes, resource, batch]
        exporters: [otlp/tempo, spanmetrics, debug]  # spanmetrics를 connector로 사용
      logs:
        receivers: [otlp]
        processors: [memory_limiter, k8sattributes, resource, batch]
        exporters: [otlphttp, debug]
      metrics:
        receivers: [spanmetrics]  # connector에서 메트릭 수신
        processors: [batch]
        exporters: [prometheusremotewrite, debug]
